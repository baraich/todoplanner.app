---
interface Props {
  content: string;
}

const { content } = Astro.props;

function parseLines(raw: string) {
  return raw
    .split("\n")
    .map((line) => {
      const trimmed = line.trim();
      if (!trimmed) return null;
      let glow = false;
      let lineActive = false;
      const match = trimmed.match(/\[(.+)\]$/);
      let text = trimmed;
      if (match) {
        const tags = match[1].split(",").map((tag) => tag.trim());
        glow = tags.includes("glow");
        lineActive = tags.includes("active");
        text = trimmed.replace(/\s*\[.+\]$/, "");
      }
      return { text, glow, lineActive };
    })
    .filter((line) => line !== null);
}
---

<>
  {parseLines(content).map((line, index) => (
    <div
      class:list={[
        "line grid grid-cols-[auto_1fr] border-b border-b-zinc-800 hover:bg-zinc-900 h-auto relative overflow-hidden",
        { "border-l-4 border-l-orange-600": line.glow },
      ]}
      data-permanent-glow={line.glow}
    >
      <!-- Line Number -->
      <div class="text-zinc-400 p-4 px-8 md:p-8 md:px-16 text-base md:text-2xl">{index + 1}</div>

      <!-- Line Text -->
      <div
        class:list={[
          "text-gray-400 text-base md:text-2xl w-full md:w-max h-full flex items-center break-words",
          { "text-white": line.glow },
        ]}
      >
        {line.text}
      </div>
    </div>
  ))}
</>

<script>
  const lines = document.querySelectorAll(".line");
  let timeoutId: Timer | null = null;

  function removeTemporaryGlow(lines: NodeListOf<Element>) {
    lines.forEach((line) => {
      if (line.getAttribute("data-permanent-glow") !== "true") {
        line.classList.remove("border-l-4");
        line.classList.remove("border-l-orange-600");
        const textDiv = line.querySelector("div:nth-child(2)");
        if (textDiv) {
          textDiv.classList.remove("text-white");
        }
      }
    });
  }

  lines.forEach((line) => {
    if (line.getAttribute("data-permanent-glow") === "true") return;

    line.addEventListener("click", () => {
      removeTemporaryGlow(lines);

      line.classList.add("border-l-4");
      line.classList.add("border-l-orange-600");
      const textDiv = line.querySelector("div:nth-child(2)");
      if (textDiv) {
        textDiv.classList.add("text-white");
      }

      if (timeoutId) {
        clearTimeout(timeoutId);
      }

      timeoutId = setTimeout(() => {
        removeTemporaryGlow(lines);
      }, 2000);
    });
  });
</script>
