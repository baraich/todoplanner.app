---
interface Props {
  idx: number;
  text: string;
  glow?: boolean;
  lineActive?: boolean;
}

const { text, lineActive, glow, idx } = Astro.props;
---

<div
  class:list={[
    "line grid grid-cols-[auto_1fr] border-b border-b-zinc-800 hover:bg-zinc-900 h-auto relative overflow-hidden",
    {
      "border-l-2 border-l-orange-600": lineActive,
    },
  ]}
>
  <!-- Line Number -->
  <div class="text-zinc-400 p-4 px-8 text-sm">{idx + 1}</div>

  <!-- Line Text -->
  <div
    class:list={[
      "text-gray-400 w-max h-full flex items-center",
      {
        "text-white": glow,
      },
    ]}
  >
    {text}
  </div>
</div>

<script>
  const lines = document.querySelectorAll(".line");
  let timeoutId: Timer | null = null;

  function removeBorder(lines: NodeListOf<Element>) {
    lines.forEach((line) => {
      line.classList.remove("border-l-2");
      line.classList.remove("border-l-orange-600");
    });
  }

  lines.forEach((line) => {
    line?.addEventListener("click", () => {
      removeBorder(lines);
      line.classList.add("border-l-2");
      line.classList.add("border-l-orange-600");

      if (timeoutId) {
        clearTimeout(timeoutId);
      }

      timeoutId = setTimeout(() => {
        removeBorder(lines);
      }, 1000);
    });
  });
</script>
